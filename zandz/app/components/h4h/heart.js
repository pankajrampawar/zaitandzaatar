"use client";

import { motion } from "framer-motion";

export const HeartSvg = () => {
    return (
        <div className="flex justify-center items-center">
            <motion.svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 139 122"
                width="80"
                height="80"
                fill="none"
            >
                <motion.path
                    d="M51.6406 118.636C33.1877 95.4988 -19.2883 43.076 13.5962 10.1915C32.5516 -8.76381 51.8972 14.3552 61.5963 29.7471C66.0057 36.7446 69.5618 43.9006 73.2407 51.2582C74.5034 53.7836 75.9779 61.2503 77.2407 58.7249C79.1658 54.8748 78.2331 47.2601 79.6406 42.7249C81.5876 36.4512 84.5788 30.8969 88.7962 25.836C96.3837 16.7309 114.537 0.533557 127.641 10.7249C144.528 23.8594 131.111 61.3541 122.663 76.4138C115.51 89.165 106.079 102.597 95.7295 112.947C94.4985 114.178 89 118.636 89 118.636"
                    stroke="#103A12"
                    strokeWidth="5"
                    strokeLinecap="round"
                    initial={{ pathLength: 0 }}
                    animate={{ pathLength: 1 }}
                    transition={{
                        duration: 2.1,
                        ease: "easeInOut",
                    }}
                />
            </motion.svg>
        </div>
    );
};



export const AnimatedArrow = ({ className }) => (
    <svg className={className} viewBox="0 0 130 112" fill="none" xmlns="http://www.w3.org/2000/svg">
        {/* Left-most path (starts first) */}
        <motion.path
            d="M8.52831 78.9819C8.14222 78.8807 7.72044 78.7777 7.36251 78.8815C7.4163 78.5504 6.90492 78.3369 6.52579 78.2605C5.1233 77.9851 3.71253 77.7012 2.31267 77.3934C1.90742 77.3075 1.42946 77.2342 1.18461 77.4905C0.752398 77.9571 1.63512 78.7842 1.51233 79.4132C1.43937 79.7597 1.93458 80.062 2.33456 80.2127C8.48562 82.5961 15.1737 83.4431 21.3001 82.5998C18.9559 81.8935 16.6281 81.2043 14.2881 80.5552C12.3604 80.0168 10.4409 79.4869 8.52003 78.9733L8.52831 78.9819Z"
            initial={{ pathLength: 0, fill: "rgba(221, 236, 222, 0)" }}
            whileInView={{ pathLength: 1, fill: "#DDECDE" }}
            transition={{ duration: 0.5, delay: 0 }}
            stroke="#DDECDE"
            strokeWidth="2"
            viewport={{ once: true }}
        />

        {/* Middle-left path */}
        <motion.path
            d="M45.5375 81.1988C45.2644 81.266 44.9554 81.2259 44.6642 81.1867C43.3037 81.0201 41.9506 80.9836 40.5988 80.9309C40.2256 80.9119 39.8607 80.9014 39.4875 80.8824C37.3101 80.7795 35.1188 80.6273 32.975 80.7695C32.4011 80.8051 31.8068 80.8721 31.339 81.1402C30.8712 81.4083 30.552 81.9354 30.7233 82.4631C30.9085 83.0402 31.629 83.5067 31.6092 84.0815C31.5855 84.7047 32.5037 85.0434 33.2011 85.1357C39.0012 85.8935 44.9024 84.7427 49.4994 81.9602C49.809 81.7733 50.1442 81.4903 50.0282 81.16C50.2665 81.3019 50.6268 81.15 50.6382 80.8992C50.2403 80.8546 49.8507 80.8185 49.442 80.7977C48.1257 80.7468 46.8128 80.8745 45.5648 81.1921L45.5375 81.1988ZM43.4325 82.6242C43.4042 82.7525 43.246 82.8336 43.0956 82.8179C43.0163 82.8057 42.9383 82.7774 42.8807 82.7177C42.9042 82.427 43.411 82.3393 43.6059 82.5763L43.4242 82.6157L43.4325 82.6242ZM46.7489 82.8743C46.5596 82.6781 46.5585 82.3618 46.7341 82.1761L46.7436 82.1685C46.9221 82.3884 46.9328 82.6971 46.7489 82.8743Z"
            initial={{ pathLength: 0, fill: "rgba(221, 236, 222, 0)" }}
            whileInView={{ pathLength: 1, fill: "#DDECDE" }}
            transition={{ duration: 0.5, delay: 0.3 }}
            stroke="#DDECDE"
            strokeWidth="2"
            viewport={{ once: true }}
        />

        {/* Middle path */}
        <motion.path
            d="M58.9267 76.7222C58.509 76.9512 58.0804 77.2039 57.8358 77.5951C57.5911 77.9862 57.6053 78.5762 58.0153 78.8795C58.567 79.2949 58.9725 79.8724 59.1431 80.5026C64.7272 80.2291 69.637 77.4434 74.0148 74.437C76.1177 73.0101 78.2971 71.2966 78.7782 68.8673C79.0527 68.8731 79.3307 68.7258 79.4645 68.4985C73.8427 69.6742 68.5964 71.797 63.5605 74.2777C61.999 75.0459 60.4512 75.8633 58.928 76.7061L58.9267 76.7222ZM77.5626 70.2907C77.6699 70.28 77.7086 70.4596 77.6 70.4863C77.5021 70.4895 77.454 70.3175 77.5626 70.2907ZM75.862 72.1174C75.8718 72.2147 75.6912 72.254 75.6555 72.1472C75.6457 72.0499 75.8263 72.0106 75.862 72.1174Z"
            initial={{ pathLength: 0, fill: "rgba(221, 236, 222, 0)" }}
            whileInView={{ pathLength: 1, fill: "#DDECDE" }}
            transition={{ duration: 0.5, delay: 0.6 }}
            stroke="#DDECDE"
            strokeWidth="2"
            viewport={{ once: true }}
        />

        {/* Middle-right path */}
        <motion.path
            d="M98.956 48.7494C98.8177 48.815 98.6685 48.9043 98.5629 49.0039C97.3665 49.9761 96.1633 50.9238 94.9356 51.846C93.491 52.9267 92.0219 53.982 90.6591 55.1475C88.497 56.9826 86.5966 59.0893 84.6377 61.1526C83.9866 61.8539 83.2694 62.7133 83.5117 63.6617C83.8118 64.8793 85.4491 65.3578 85.9867 66.4907C87.1838 66.164 88.3822 65.8214 89.4602 65.2143C90.5193 64.6225 91.4104 63.8042 92.2267 62.9257C95.3024 59.6682 97.4926 55.6314 98.5339 51.3265C98.7591 50.4099 98.9624 49.4357 99.6014 48.7741C99.4201 48.6035 99.1784 48.6316 98.9397 48.7325L98.956 48.7494ZM98.1777 51.6716C98.1673 51.8002 98.078 51.9167 97.9681 51.9595C97.8949 51.9881 97.8052 51.9997 97.7277 51.9715C97.973 51.7903 97.8097 51.2898 97.4904 51.2897C97.4302 51.1575 97.7129 51.1719 97.7364 51.3183C97.9441 51.2724 98.1771 51.4617 98.1683 51.6792L98.1777 51.6716ZM98.0902 50.6746L98.0657 50.6491C97.9489 50.6674 97.9129 50.4557 98.0159 50.3883C98.1189 50.3209 98.2482 50.3678 98.3597 50.4139C98.2649 50.4897 98.1864 50.5826 98.0821 50.6661L98.0902 50.6746Z"
            initial={{ pathLength: 0, fill: "rgba(221, 236, 222, 0)" }}
            whileInView={{ pathLength: 1, fill: "#DDECDE" }}
            transition={{ duration: 0.5, delay: 0.9 }}
            stroke="#DDECDE"
            strokeWidth="2"
            viewport={{ once: true }}
        />

        {/* Right-most path (starts last) */}
        <motion.path
            d="M114.56 19.7201C113.396 19.1092 111.85 18.5763 110.982 19.2701C110.877 19.354 110.78 19.4464 110.699 19.572C107.727 23.7601 104.509 27.6761 101.072 31.3294C99.675 32.8237 98.2284 34.2667 97.1246 35.995C102.058 34.6971 106.445 31.5383 109.334 27.1595C109.76 27.53 109.59 28.1945 109.389 28.6872C106.963 34.5091 104.611 40.4078 102.295 46.4137C103.364 45.7706 104.236 44.8174 104.807 43.7109C104.626 43.5233 104.505 43.2575 104.481 43.0048C104.751 43.0916 105.028 43.1868 105.298 43.2736C106.594 41.4822 107.756 39.5866 108.773 37.6106C108.359 37.7599 107.936 37.9167 107.514 38.0575C109.843 36.4079 110.963 33.4882 111.849 30.7106C111.958 35.5342 111.819 40.6615 114.009 45.0153C115.712 41.8414 115.849 38.0604 115.818 34.4737C115.799 31.8447 115.708 29.2282 115.552 26.6328C114.889 28.5376 114.812 30.6994 115.364 32.7066C114.422 31.7664 114.225 30.126 114.903 29.025C114.547 29.023 114.213 28.7303 114.136 28.3694C114.491 28.2821 114.626 27.8266 114.623 27.4209C114.619 27.0314 114.556 26.5982 114.743 26.2671C114.931 25.936 115.539 25.9183 115.606 26.303C115.544 25.7482 115.464 25.1926 115.392 24.6455C115.108 24.7365 114.824 24.8274 114.532 24.9099C113.795 24.0937 113.961 22.8125 114.353 21.8347C114.744 20.857 115.329 19.9215 115.319 18.826C114.874 18.8196 114.498 19.2709 114.541 19.7354L114.56 19.7201ZM100.298 33.8369C100.163 33.8543 100.026 33.8879 99.8907 33.9053C99.8301 33.7725 99.8978 33.5975 100.034 33.5639C100.171 33.5303 100.34 33.6524 100.373 33.792L100.306 33.8454L100.298 33.8369ZM106.025 40.0337C105.93 40.0938 105.805 40.1036 105.694 40.0412C105.704 39.8064 105.985 39.6423 106.199 39.7587C106.189 39.8718 106.119 39.9736 106.025 40.0337ZM109.91 34.0428L109.808 33.8673C109.908 33.848 110.009 33.8126 110.109 33.7934C110.039 33.8791 109.97 33.9648 109.9 34.0504L109.91 34.0428ZM114.34 39.7194C114.38 39.7782 114.402 39.8361 114.432 39.9025C114.323 39.9294 114.224 39.9486 114.122 39.984C114.192 39.8983 114.261 39.8127 114.34 39.7194ZM115.043 40.8502C115.053 40.948 115.001 41.0346 114.926 41.0794C114.747 41.192 114.438 41.1519 114.405 40.9069C114.379 40.5649 115.009 40.4997 115.035 40.8416L115.043 40.8502ZM109.611 23.8561C109.749 23.8064 109.911 23.9038 109.952 24.0519L109.885 24.1053C109.757 24.1474 109.629 24.1896 109.492 24.2232C109.414 24.0894 109.473 23.9059 109.611 23.8561ZM110.21 26.4903C110.368 26.3037 110.601 26.1777 110.851 26.1742C110.856 26.3367 110.773 26.4785 110.65 26.5614C110.507 26.6758 110.291 26.6972 110.121 26.5912L110.21 26.4903ZM107.14 27.4776C107.052 27.684 106.651 27.5662 106.687 27.3409L106.728 27.3836C106.758 27.2391 106.778 27.1022 106.798 26.9653C107.026 27.0094 107.228 27.2712 107.14 27.4776ZM108.571 25.7903C108.466 25.8742 108.317 25.8423 108.168 25.8104C108.249 25.6847 108.34 25.5515 108.422 25.4259L108.455 25.46C108.602 25.4026 108.696 25.6751 108.59 25.7751C108.59 25.7751 108.571 25.7904 108.561 25.798L108.571 25.7903ZM110.427 29.097L110.46 29.1311C110.415 29.3478 110.379 29.5731 110.335 29.7899C109.989 29.4316 109.924 28.8037 110.204 28.4286C110.476 28.4831 110.622 28.896 110.435 29.1055L110.427 29.097ZM111.373 29.9725C111.476 29.7994 111.512 29.5741 111.476 29.3613C111.628 29.2555 111.712 29.6411 111.531 29.6805L111.528 29.7128C111.64 29.7591 111.592 29.9188 111.515 29.9798C111.477 30.0103 111.424 30.0076 111.383 29.9649L111.373 29.9725ZM113.012 32.9842L113.002 32.9918C113.137 33.096 113.192 33.2935 113.134 33.4609C112.996 33.4052 112.831 33.34 112.78 33.1995C112.729 33.059 112.915 32.8657 113.012 32.9842ZM112.914 34.7394C113.026 34.6802 113.153 34.8813 113.057 34.9576C112.945 35.0168 112.819 34.8156 112.914 34.7394ZM113.38 35.485C113.269 35.5442 113.142 35.3431 113.247 35.2592C113.359 35.2001 113.485 35.4012 113.38 35.485ZM114.969 38.8997C114.873 38.9759 114.748 38.9858 114.635 38.9395C114.637 38.6963 114.929 38.5083 115.135 38.6161C115.134 38.7378 115.063 38.8396 114.968 38.9159L114.969 38.8997ZM115.111 37.6984C114.91 37.6476 114.699 37.6044 114.498 37.5536C114.505 37.1402 114.729 36.6893 115.129 36.5961L115.257 36.554C115.289 36.9369 115.23 37.3313 115.12 37.6907L115.111 37.6984ZM115.363 35.1399C115.369 35.3917 115.271 35.7274 115.101 35.8323C115.035 35.8857 114.954 35.8897 114.859 35.8443L114.865 35.7797C114.716 35.5207 114.569 35.2455 114.61 34.9556C114.652 34.6657 114.992 34.4235 115.209 34.613C115.352 34.7257 115.369 34.9537 115.372 35.1323L115.363 35.1399ZM114.937 33.8935C115.007 33.8078 115.068 33.7136 115.137 33.6279L115.247 33.8119C115.146 33.8473 115.047 33.8666 114.945 33.902L114.937 33.8935ZM112.889 29.8795L112.826 29.8844C112.859 30.251 112.89 30.6339 112.913 31.0082C112.265 30.6345 112.29 29.4515 112.963 29.1857C112.945 29.4118 112.917 29.6456 112.881 29.8709L112.889 29.8795ZM110.608 21.6844L110.525 21.7207C110.279 21.5541 110.628 21.1096 110.824 21.3304C110.752 21.4484 110.68 21.5664 110.6 21.6759L110.608 21.6844ZM114.097 25.5447C113.899 25.5671 113.711 25.3547 113.726 25.1608C113.752 24.9593 113.985 24.8333 114.166 24.9156C114.14 25.1171 114.114 25.3347 114.087 25.5523L114.097 25.5447Z"
            initial={{ pathLength: 0, fill: "rgba(221, 236, 222, 0)" }}
            whileInView={{ pathLength: 1, fill: "#DDECDE" }}
            transition={{ duration: 0.5, delay: 1.2 }}
            stroke="#DDECDE"
            strokeWidth="2"
            viewport={{ once: true }}
        />
    </svg>
);


